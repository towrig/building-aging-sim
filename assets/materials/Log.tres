[gd_resource type="ShaderMaterial" load_steps=4 format=2]

[ext_resource path="res://assets/textures/log-end_normal.png" type="Texture" id=1]
[ext_resource path="res://assets/textures/log-end-tex.jpg" type="Texture" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D color_texture;
uniform sampler2D normal_map;
uniform float scale = 2.0;
uniform float depth_intensity = 1.3;
uniform float roughness = 1.0;

void vertex() {
// Output:0

}

void fragment() {
// Texture:2
	vec4 color_vec = texture(color_texture,  (UV.xy - 0.5) * scale);
	vec4 normal_vec = texture(normal_map,  (UV.xy - 0.5) * scale);

// Output:0
	ALBEDO = color_vec.rgb;
	ROUGHNESS = normal_vec.z * roughness;
	NORMALMAP = normal_vec.xyz;
	NORMALMAP_DEPTH = normal_vec.z * depth_intensity;

}

void light() {
// Output:0

}
"

[resource]
shader = SubResource( 1 )
shader_param/scale = 2.0
shader_param/depth_intensity = 10.0
shader_param/roughness = 2.0
shader_param/color_texture = ExtResource( 2 )
shader_param/normal_map = ExtResource( 1 )
